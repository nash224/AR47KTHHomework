// 058_InheritanceMemory.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>

class A
{
public:
    __int64 Test;

    A()
        : Test(10)
        // 멤버 이니셜라이저는 생성자가 호출되기 전에 초기화하는 방법이다.
        // 이니셜라이저는 생성자의 본문보다 먼저 실행된다.
    {
        // 생성자의 본문
        printf_s("A 생성자 \n");
    }
    
    // ASK UP 선생님의 조언 : 멤버 변수를 초기화하는 과정에서 
    //  생성자 본문에서 추가적인 코드를 실행할 필요가 없어 져서, 
    //  초기화 과정이 간소화되어 성능 향상을 기대할 수 있다고 함.
    //  그리고 상수 멤버 변수나 참조 멤버 변수를 초기화할 때는 가능한 멤버 이니셜라이저를 사용해야된다고 함.

    ~A()
    {
        printf_s("A 소멸자\n");
    }


private:
};

class B : public A
{
public:
    B()
        // Test(20) : 상속을 받았기 때문에 변수가 존재함
    {
        Test = 30;
        printf_s("B 생성자\n");
    }

    // 소멸자는 객체가 소멸될 때 호출되는 함수이고, 인자를 넣어줄 수 없다.
    // 소멸자는 객체가 소멸되기 전에 필요한 정리 작업을 수행하는데 사용된다.
    // 그리고 일반적으로 동적으로 할당된 메모리를 해제하는데 사용된다.
    // 하지만 대부분 사용하지 않으므로 있다는 것만 아는게 좋다.
    

    ~B()
    {
        Test = 20;
        printf_s("B 소멸자\n");
    }
};


int main()
{
    B NewB = B();

    std::cout << "========================" << std::endl;

    
    NewB.~B();

    int Value = sizeof(B);

    int a = 0;
    
}